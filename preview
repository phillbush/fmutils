#!/bin/sh
# this file in public domain

previewdir="${CACHEDIR:-"${XDG_CACHE_HOME:-"$HOME/.cache"}"}/preview"

# show usage
usage() {
	echo "usage: preview filename [w h x y]" >&2
	exit 1
}

# get file extension
getextension() {
	echo "${1##*.}" | tr '[:upper:]' '[:lower:]'
}

# get file mimetype
getfilemime() {
	file -ib "$@" | cut -d';' -f1
}

# get cached file
getcache() {
	mkdir -p "$previewdir"
	printf "%s/%s" "$previewdir" "$(stat "$1" | sha256)"
}

# preview image
img() {
	PATH="$PATH:/usr/local/lib/w3m/"
	PATH="$PATH:/usr/local/libexec/w3m/"
	PATH="$PATH:/usr/local/lib64/w3m/"
	PATH="$PATH:/usr/local/libexec64/w3m/"
	PATH="$PATH:/usr/lib/w3m/"
	PATH="$PATH:/usr/libexec/w3m/"
	PATH="$PATH:/usr/lib64/w3m/"
	PATH="$PATH:/usr/libexec64/w3m/"
	filename="$1"

	{
		# get information about terminal X11 window
		xdotool getwindowgeometry --shell "$WINDOWID" 2>/dev/null | cut -d= -f2

		# get information about terminal character column and row
		stty -f /dev/tty size

		# get information about image
		printf "5;%s\n" "$filename" | w3mimgdisplay
	} | tr '\n' ' ' | {
		read -r WIN_ID WIN_X WIN_Y WIN_W WIN_H SCREEN LINES COLUMNS IMG_W IMG_H

		# do nothing on dummy variables, just for shellcheck to be happy
		: "$WIN_ID" "$WIN_X" "$WIN_Y" "$SCREEN"

		# compute stuff
		FONT_W="$(( WIN_W / COLUMNS ))"
		FONT_H="$(( WIN_H / LINES ))"
		MAX_W="$(( FONT_W * (W - 3) ))"
		MAX_H="$(( FONT_H * (H - 3) ))"
		FINAL_X="$(( FONT_W * (X + 1) ))"
		FINAL_Y="$(( FONT_H * (Y + 1) ))"
		FINAL_W="$IMG_W"
		FINAL_H="$IMG_H"

		# resize image
		if test "$FINAL_H" -gt "$MAX_H"
		then
			FINAL_W="$(( FINAL_W * MAX_H / FINAL_H ))"
			FINAL_H="$MAX_H"
		fi
		if test "$FINAL_W" -gt "$MAX_W"
		then
			FINAL_H="$(( FINAL_H * MAX_W / FINAL_W ))"
			FINAL_W="$MAX_W"
		fi

		# perform w3m(1) black magic
		if test "$cmdname" = "unpreview"
		then
			FINAL_W="$((FINAL_W + FONT_W))"
			FINAL_H="$((FINAL_H + FONT_H))"
			printf '6;%s;%s;%s;%s;\n4;\n3;\n' \
			"$FINAL_X" "$FINAL_Y" "$FINAL_W" "$FINAL_H" | w3mimgdisplay
		else
			printf '6;%s;%s;%s;%s;\n0;1;%s;%s;%s;%s;;;;;%s\n4;\n3;\n' \
			"$FINAL_X" "$FINAL_Y" "$FINAL_W" "$FINAL_H" \
			"$FINAL_X" "$FINAL_Y" "$FINAL_W" "$FINAL_H" "$filename" | w3mimgdisplay
		fi
	}
}

# preview file and exit
preview() {
	case "$2" in
	"")
		if test "$cmdname" != "unpreview"
		then
			echo '----- File Type Classification -----'
			file -b "$1"
		fi
		exit
		;;
	a|ace|alz|arc|arj|bz|bz2|cab|cpio|deb|gz|jar|lha|lz|lzh|lzma|lzo|\
	rpm|rz|t7z|tar|tbz|tbz2|tgz|tlz|txz|tZ|tzo|war|xpi|xz|Z|zip|7z)
		if test "$cmdname" != "unpreview"
		then
			bsdtar -tf "$1"
		fi
		exit
		;;
	pdf)
		if test "$cmdname" != "unpreview"
		then
			pdftotext -layout -- "$1" -
		fi
		exit
		;;
	htm|html|xhtml)
		if test "$cmdname" != "unpreview"
		then
			w3m -dump "$1"
		fi
		exit
		;;
	1|2|3|4|5|6|7|8|9)
		if test "$cmdname" != "unpreview"
		then
			MANWIDTH="$W" man -Tutf8 -l "$1" | sed 's/.//g'
		fi
		exit
		;;
	text/*|*/xml|application/x-shellscript)
			cat "$1"
			exit
		;;
	image/svg+xml)
		if test "$IMG" -eq 1
		then
			cache="$(getcache "$1")"
			[ -f "$cache" ] || rsvg-convert "$1" >"$cache"
			img "$cache"
			exit 1
		elif test "$cmdname" != "unpreview"
		then
			cat "$1"
			exit
		fi
		;;
	image/*)
		if test "$IMG" -eq 1
		then
			img "$1"
			exit 1
		elif test "$cmdname" != "unpreview"
		then
			exiftool "$1"
			exit
		fi
		;;
	video/*)
		if test "$IMG" -eq 1
		then
			cache="$(getcache "$1")"
			[ -f "$cache" ] || ffmpegthumbnailer -i "$1" -o "$cache" -s 0
			img "$cache"
			exit 1
		elif test "$cmdname" != "unpreview"
		then
			mediainfo "$1"
			exit
		fi
		exit
		;;
	audio/*|application/octet-stream)
		if test "$cmdname" != "unpreview"
		then
			mediainfo "$1"
		fi
		exit
		;;
	esac
}

cmdname="${0##*/}"
case "$#" in
1)
	W=72
	H=20
	X=0
	Y=0
	IMG=0
	;;
5)
	W=$2
	H=$3
	X=$4
	Y=$5
	IMG=1
	;;
*)
	usage
	;;
esac

test -p "$1" && exit 1
preview "$1" "$(getextension "$1")"     # try first to preview by file extension
preview "$1" "$(getfilemime "$1")"      # then try to preview by mimetype
preview "$1"                            # then just print its file type
