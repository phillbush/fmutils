#!/bin/sh
# this file in public domain

set -C -f -u

previewdir="${CACHEDIR:-${XDG_CACHE_HOME:-"$HOME/.cache"}}/preview"

# show usage
usage() {
	echo "usage: preview filename [w h x y]" >&2
	exit 1
}

# get file extension
getextension() {
	echo "${1##*.}" | tr '[:upper:]' '[:lower:]'
}

# get file mimetype
getfilemime() {
	file -ib "$@" | cut -d';' -f1
}

# get cached file
getcache() {
	mkdir -p "$previewdir"
	printf '%s/%s' "$previewdir" "$(stat "$(readlink -f "$1")" | sha256 | awk '{print $1}')"
}

# preview image
img() {
	PATH="$PATH:/usr/local/lib/w3m/"
	PATH="$PATH:/usr/local/libexec/w3m/"
	PATH="$PATH:/usr/local/lib64/w3m/"
	PATH="$PATH:/usr/local/libexec64/w3m/"
	PATH="$PATH:/usr/lib/w3m/"
	PATH="$PATH:/usr/libexec/w3m/"
	PATH="$PATH:/usr/lib64/w3m/"
	PATH="$PATH:/usr/libexec64/w3m/"

	tmp="$(xdotool getactivewindow getwindowgeometry --shell | sed -n '/WIDTH/{s/.*=//; p;}; /HEIGHT/{s/.*=//; p;}' | tr '\n' ' ' )"
	term_width="$(echo $tmp | cut -d' ' -f1)"
	term_height="$(echo $tmp | cut -d' ' -f2)"
	tmp="$(stty -f /dev/tty size)"
	term_lines="$(echo $tmp | cut -d' ' -f1)"
	term_columns="$(echo $tmp | cut -d' ' -f2)"
	tmp="$(echo "5;$1" | w3mimgdisplay)"
	img_width="$(echo $tmp | cut -d' ' -f1)"
	img_height="$(echo $tmp | cut -d' ' -f2)"

	fontw=$(( term_width / term_columns ))
	fonth=$(( term_height / term_lines ))
	max_width=$(( fontw * (COLUMNS - 1) ))
	max_height=$(( fonth * (LINES - 1) ))
	img_x=$(( fontw * X ))
	img_y=$(( fonth * Y ))
	if [ "$img_width" -gt "$max_width" ]
	then
		img_height=$(( img_height * max_width / img_width ))
		img_width=$max_width
	fi
	if [ "$img_height" -gt "$max_height" ]
	then
		img_width=$(( img_width * max_height / img_height ))
		img_height=$max_height
	fi

	printf '6;%s;%s;%s;%s;\n0;1;%s;%s;%s;%s;;;;;%s\n4;\n3;\n' \
	"$img_x" "$img_y" "$img_width" "$img_height" \
	"$img_x" "$img_y" "$img_width" "$img_height" "$1" | w3mimgdisplay
}

# preview file and exit
preview() {
	case "$2" in
	"")
		echo '----- File Type Classification -----'
		file -b "$1"
		exit
		;;
	a|ace|alz|arc|arj|bz|bz2|cab|cpio|deb|gz|jar|lha|lz|lzh|lzma|lzo|\
	rpm|rz|t7z|tar|tbz|tbz2|tgz|tlz|txz|tZ|tzo|war|xpi|xz|Z|zip|7z)
		bsdtar -tf "$1"
		exit
		;;
	pdf)
		pdftotext -layout -- "$1" -
		exit
		;;
	htm|html|xhtml)
		w3m -dump "$1"
		exit
		;;
	1|2|3|4|5|6|7|8|9)
		MANWIDTH="$COLUMNS" man -T ascii "$(readlink -f $1)" | sed 's/.//g'
		exit
		;;
	text/*|*/xml|application/x-shellscript)
		cat "$1"
		exit
		;;
	image/*)
		if [ $IMG -eq 1 ]
		then
			img "$1"
			exit 1
		else
			exiftool "$1"
			exit
		fi
		;;
	video/*)
		if [ $IMG -eq 1 ]
		then
			cache="$(getcache "$1")"
			[ -f "$cache" ] || ffmpegthumbnailer -i "$1" -o "$cache" -s 0
			img "$cache"
			exit 1
		else
			mediainfo "$1"
			exit
		fi
		exit
		;;
	audio/*|application/octet-stream)
		mediainfo "$1"
		exit
		;;
	esac
}

case "$#" in
1)
	COLUMNS=72
	LINES=20
	X=0
	Y=0
	IMG=0
	;;
5)
	COLUMNS=$2
	LINES=$3
	X=$4
	Y=$5
	IMG=1
	;;
*)
	usage
	;;
esac

[ -p "$1" ] && exit 1
preview "$1" "$(getextension "$1")"       # try first to preview by file extension
preview "$1" "$(getfilemime "$1")"        # then try to preview by mimetype
preview "$1"                            # then just print its file type
